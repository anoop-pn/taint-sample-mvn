/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tainting;

import org.checkerframework.checker.optional.qual.Present;
import edu.ucr.cs.riple.taint.ucrtainting.qual.RPolyTainted;
import edu.ucr.cs.riple.taint.ucrtainting.qual.RTainted;
import edu.ucr.cs.riple.taint.ucrtainting.qual.RUntainted;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class TaintExample {
  public boolean someLibraryMethod() {
    return true;
  }

  void execute(@RUntainted String s) {}

//  void stringRef(@Untainted String ref) {
//    execute(ref.substring(3, 5)); // error
//  }

  void makeExternalCall(@RTainted String s) {
    TaintStubSample.printUntaintedString(s);
  }

  void testRCE(@RTainted String s) throws IOException {
    Runtime.getRuntime().exec(s);
//    ProcessBuilder p = new ProcessBuilder(s);
//    p = new ProcessBuilder(Arrays.asList(s));
//    List<@Untainted String> l = new ArrayList<>();
//    l.add(s);
//    p = new ProcessBuilder(l);
  }
//
//  @PolyTainted String id(@PolyTainted String input) {
//    return input;
//  }
//
//  void usePoly(String ref) {
//    execute(id("untainted"));
//    execute(id(ref));
//  }

//  void testList(String ref) {
//    List<@Untainted String> l = new ArrayList<>();
//    l.add(ref);
//  }

//  void useOptional() {
//    Optional<String> opt = Optional.empty();
//    if (opt.isPresent()) {
//      opt.get();
//    }
//  }


  void test1(@RTainted String s1, @RTainted String s2) {
    @RUntainted String result=TaintStubSample.compute(s1,s2);
  }

  void test2(@RTainted String s1, @RUntainted String s2) {
    @RUntainted String result=TaintStubSample.compute(s1,s2);
  }

  void test3(@RUntainted String s1, @RTainted String s2) {
    @RUntainted String result=TaintStubSample.compute(s1,s2);
  }

  void test4(@RUntainted String s1, @RUntainted String s2) {
    @RUntainted String result=TaintStubSample.compute(s1,s2);
  }

}
